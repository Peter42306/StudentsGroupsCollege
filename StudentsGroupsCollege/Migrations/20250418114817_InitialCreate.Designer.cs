// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentsGroupsCollege.Data;

#nullable disable

namespace StudentsGroupsCollege.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250418114817_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.15");

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("TEXT");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("TEXT");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ClaimType")
                        .HasColumnType("TEXT");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("TEXT");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("RoleId")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .HasColumnType("TEXT");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.College", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Colleges");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Specialized in engineering and computer science",
                            Name = "Technical Academy"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Focuses on maritime and logistics education",
                            Name = "Marine University"
                        },
                        new
                        {
                            Id = 3,
                            Description = "IT oriented academy",
                            Name = "IT Step Academy"
                        });
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.CollegeGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollegeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CollegeId");

                    b.ToTable("CollegeGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollegeId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur  deserunt mollit minim veniam, quis anim id est adipiscing elit.",
                            Name = "ENG-101"
                        },
                        new
                        {
                            Id = 2,
                            CollegeId = 1,
                            Description = "Sed do eiusmod tempor incididunt ut labore et dolore.",
                            Name = "ENG-102"
                        },
                        new
                        {
                            Id = 3,
                            CollegeId = 2,
                            Description = "Ut enim ad minim veniam, quis nostrudi rure dolor in exercitation.",
                            Name = "CS-201"
                        },
                        new
                        {
                            Id = 4,
                            CollegeId = 2,
                            Description = "Duis aute irure dolor in reprehenderit in voluptate.",
                            Name = "NAV-101"
                        },
                        new
                        {
                            Id = 5,
                            CollegeId = 2,
                            Description = "Excepteur sint  occaecat cupidatat non proident sunt.",
                            Name = "LOG-202"
                        },
                        new
                        {
                            Id = 6,
                            CollegeId = 2,
                            Description = "Culpa qui officia deserunt mollit anim id est laborum.",
                            Name = "MAR-203"
                        },
                        new
                        {
                            Id = 7,
                            CollegeId = 3,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                            Name = "BUS-101"
                        },
                        new
                        {
                            Id = 8,
                            CollegeId = 3,
                            Description = "Nisi ut aliquip ex ea commodo consequat minim veniam, quis nostrud ullamco laboris.",
                            Name = "MKT-202"
                        },
                        new
                        {
                            Id = 9,
                            CollegeId = 3,
                            Description = "Tempor incididunt ut labore et dolore magna aliqua.",
                            Name = "FIN-303"
                        });
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollegeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CollegeId");

                    b.ToTable("Staffs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollegeId = 1,
                            Description = "Lorem ipsum dolor sit amet consectetur adipiscing elit sed.",
                            Name = "Tatiana Morozova",
                            Role = 0
                        },
                        new
                        {
                            Id = 2,
                            CollegeId = 1,
                            Description = "Ut enim ad minim veniam quis nostrud exercitation ullamco laboris nisi.",
                            Name = "Andrei Sokolov",
                            Role = 1
                        },
                        new
                        {
                            Id = 3,
                            CollegeId = 1,
                            Description = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore.",
                            Name = "Irina Vlasova",
                            Role = 2
                        },
                        new
                        {
                            Id = 4,
                            CollegeId = 1,
                            Description = "Excepteur sint occaecat cupidatat non proident sunt in culpa.",
                            Name = "Yulia Antonova",
                            Role = 3
                        },
                        new
                        {
                            Id = 5,
                            CollegeId = 1,
                            Description = "Eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            Name = "Oksana Petrova",
                            Role = 4
                        },
                        new
                        {
                            Id = 6,
                            CollegeId = 1,
                            Description = "Reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.",
                            Name = "Vladimir Ivanov",
                            Role = 5
                        },
                        new
                        {
                            Id = 7,
                            CollegeId = 2,
                            Description = "Consectetur adipiscing elit sed do eiusmod tempor incididunt ut labore.",
                            Name = "Natalia Belkina",
                            Role = 0
                        },
                        new
                        {
                            Id = 8,
                            CollegeId = 2,
                            Description = "Nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo.",
                            Name = "Sergey Zhukov",
                            Role = 1
                        },
                        new
                        {
                            Id = 9,
                            CollegeId = 2,
                            Description = "Ut aliquip ex ea commodo consequat duis aute irure dolor.",
                            Name = "Elena Voronova",
                            Role = 2
                        },
                        new
                        {
                            Id = 10,
                            CollegeId = 2,
                            Description = "Sunt in culpa qui officia deserunt mollit anim id est laborum.",
                            Name = "Igor Romanov",
                            Role = 3
                        },
                        new
                        {
                            Id = 11,
                            CollegeId = 2,
                            Description = "Lorem ipsum dolor sit amet consectetur adipiscing elit.",
                            Name = "Tatiana Miroshnichenko",
                            Role = 4
                        },
                        new
                        {
                            Id = 12,
                            CollegeId = 2,
                            Description = "Voluptate velit esse cillum dolore eu fugiat nulla pariatur excepteur sint.",
                            Name = "Pavel Ershov",
                            Role = 5
                        },
                        new
                        {
                            Id = 13,
                            CollegeId = 3,
                            Description = "Sed ut perspiciatis unde omnis iste natus error sit voluptatem.",
                            Name = "Olga Kuzmina",
                            Role = 0
                        },
                        new
                        {
                            Id = 14,
                            CollegeId = 3,
                            Description = "Accusantium doloremque laudantium totam rem aperiam eaque ipsa.",
                            Name = "Dmitry Pavlov",
                            Role = 1
                        },
                        new
                        {
                            Id = 15,
                            CollegeId = 3,
                            Description = "Quis autem vel eum iure reprehenderit qui in ea.",
                            Name = "Svetlana Koroleva",
                            Role = 2
                        },
                        new
                        {
                            Id = 16,
                            CollegeId = 3,
                            Description = "Voluptas nulla pariatur at vero eos et accusamus.",
                            Name = "Kirill Trofimov",
                            Role = 3
                        },
                        new
                        {
                            Id = 17,
                            CollegeId = 3,
                            Description = "Ut enim ad minima veniam quis nostrum exercitationem ullam.",
                            Name = "Anastasia Fedorova",
                            Role = 4
                        },
                        new
                        {
                            Id = 18,
                            CollegeId = 3,
                            Description = "Laboriosam nisi ut aliquid ex ea commodi consequatur.",
                            Name = "Oleg Grigoriev",
                            Role = 5
                        });
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollegeGroupId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CollegeGroupId");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollegeGroupId = 1,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                            Name = "Anna Petrova"
                        },
                        new
                        {
                            Id = 2,
                            CollegeGroupId = 1,
                            Description = "Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia.",
                            Name = "Dmitry Ivanov"
                        },
                        new
                        {
                            Id = 3,
                            CollegeGroupId = 1,
                            Description = "Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.",
                            Name = "Maria Sokolova"
                        },
                        new
                        {
                            Id = 4,
                            CollegeGroupId = 1,
                            Description = "Enim ad minim veniam quis nostrud exercitation ullamco laboris nisi.",
                            Name = "Kirill Smirnov"
                        },
                        new
                        {
                            Id = 5,
                            CollegeGroupId = 1,
                            Description = "Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore.",
                            Name = "Elena Orlova"
                        },
                        new
                        {
                            Id = 6,
                            CollegeGroupId = 1,
                            Description = "Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit.",
                            Name = "Sergey Kozlov"
                        },
                        new
                        {
                            Id = 7,
                            CollegeGroupId = 2,
                            Description = "Voluptatem accusantium doloremque laudantium, totam rem aperiam.",
                            Name = "Natalia Volkova"
                        },
                        new
                        {
                            Id = 8,
                            CollegeGroupId = 2,
                            Description = "Eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae.",
                            Name = "Alexey Egorov"
                        },
                        new
                        {
                            Id = 9,
                            CollegeGroupId = 2,
                            Description = "Ut enim ad minima veniam, quis nostrum exercitationem ullam.",
                            Name = "Irina Baranova"
                        },
                        new
                        {
                            Id = 10,
                            CollegeGroupId = 2,
                            Description = "Exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.",
                            Name = "Anton Vinogradov"
                        },
                        new
                        {
                            Id = 11,
                            CollegeGroupId = 3,
                            Description = "Sit amet, consectetur adipiscing elit, sed do eiusmod tempor.",
                            Name = "Olga Dmitrieva"
                        },
                        new
                        {
                            Id = 12,
                            CollegeGroupId = 3,
                            Description = "Cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non.",
                            Name = "Vadim Nikitin"
                        },
                        new
                        {
                            Id = 13,
                            CollegeGroupId = 3,
                            Description = "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit.",
                            Name = "Ekaterina Filippova"
                        },
                        new
                        {
                            Id = 14,
                            CollegeGroupId = 4,
                            Description = "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                            Name = "Maxim Lebedev"
                        },
                        new
                        {
                            Id = 15,
                            CollegeGroupId = 4,
                            Description = "Velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum.",
                            Name = "Svetlana Andreeva"
                        },
                        new
                        {
                            Id = 16,
                            CollegeGroupId = 4,
                            Description = "Fugiat quo voluptas nulla pariatur. At vero eos et accusamus.",
                            Name = "Pavel Frolov"
                        },
                        new
                        {
                            Id = 17,
                            CollegeGroupId = 4,
                            Description = "Itaque earum rerum hic tenetur a sapiente delectus, ut aut reiciendis.",
                            Name = "Yulia Romanova"
                        },
                        new
                        {
                            Id = 18,
                            CollegeGroupId = 4,
                            Description = "Nisi ut aliquid ex ea commodi consequatur. Quis autem vel eum.",
                            Name = "Nikita Sorokin"
                        },
                        new
                        {
                            Id = 19,
                            CollegeGroupId = 4,
                            Description = "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet.",
                            Name = "Tatiana Belova"
                        },
                        new
                        {
                            Id = 20,
                            CollegeGroupId = 4,
                            Description = "Ut enim ad minima veniam quis nostrum exercitationem ullam corporis suscipit laboriosam.",
                            Name = "Egor Semenov"
                        },
                        new
                        {
                            Id = 21,
                            CollegeGroupId = 5,
                            Description = "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
                            Name = "Larisa Mironova"
                        },
                        new
                        {
                            Id = 22,
                            CollegeGroupId = 5,
                            Description = "Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque.",
                            Name = "Roman Gusev"
                        },
                        new
                        {
                            Id = 23,
                            CollegeGroupId = 5,
                            Description = "Accusantium doloremque laudantium totam rem aperiam eaque ipsa quae ab illo.",
                            Name = "Elizaveta Pavlova"
                        },
                        new
                        {
                            Id = 24,
                            CollegeGroupId = 5,
                            Description = "Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus saepe.",
                            Name = "Stepan Makarov"
                        },
                        new
                        {
                            Id = 25,
                            CollegeGroupId = 6,
                            Description = "Sed ut perspiciatis unde omnis iste natus error sit.",
                            Name = "Irina Kalinina"
                        },
                        new
                        {
                            Id = 26,
                            CollegeGroupId = 6,
                            Description = "Ut enim ad minima veniam quis nostrum exercitationem ullam.",
                            Name = "Yaroslav Markov"
                        },
                        new
                        {
                            Id = 27,
                            CollegeGroupId = 6,
                            Description = "Corporis suscipit laboriosam nisi ut aliquid ex ea commodi consequatur.",
                            Name = "Diana Nikiforova"
                        },
                        new
                        {
                            Id = 28,
                            CollegeGroupId = 6,
                            Description = "Ut enim ad minima veniam quis nostrum exercitationem ullam corporis suscipit laboriosam.",
                            Name = "Alexandr Vasiliev"
                        },
                        new
                        {
                            Id = 29,
                            CollegeGroupId = 6,
                            Description = "Quis autem vel eum iure reprehenderit qui in ea voluptate velit.",
                            Name = "Galina Kuznetsova"
                        },
                        new
                        {
                            Id = 30,
                            CollegeGroupId = 6,
                            Description = "Et harum quidem rerum facilis est et expedita distinctio.",
                            Name = "Igor Fedotov"
                        },
                        new
                        {
                            Id = 31,
                            CollegeGroupId = 7,
                            Description = "Nam libero tempore cum soluta nobis est eligendi optio cumque nihil.",
                            Name = "Maria Stepanova"
                        },
                        new
                        {
                            Id = 32,
                            CollegeGroupId = 7,
                            Description = "Commodi consequatur quis autem vel eum iure reprehenderit.",
                            Name = "Boris Lebedev"
                        },
                        new
                        {
                            Id = 33,
                            CollegeGroupId = 7,
                            Description = "Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut.",
                            Name = "Kseniya Zaitseva"
                        },
                        new
                        {
                            Id = 34,
                            CollegeGroupId = 7,
                            Description = "Consequatur aut perferendis doloribus asperiores repellat.",
                            Name = "Denis Abramov"
                        },
                        new
                        {
                            Id = 35,
                            CollegeGroupId = 7,
                            Description = "Ut enim ad minima veniam quis nostrum exercitationem ullam corporis suscipit.",
                            Name = "Victoria Ermakova"
                        },
                        new
                        {
                            Id = 36,
                            CollegeGroupId = 8,
                            Description = "Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse.",
                            Name = "Oksana Zueva"
                        },
                        new
                        {
                            Id = 37,
                            CollegeGroupId = 8,
                            Description = "Et harum quidem rerum facilis est et expedita distinctio.",
                            Name = "Andrei Krylov"
                        },
                        new
                        {
                            Id = 38,
                            CollegeGroupId = 9,
                            Description = "Temporibus autem quibusdam et aut officiis debitis aut rerum necessitatibus.",
                            Name = "Natalia Bobrova"
                        },
                        new
                        {
                            Id = 39,
                            CollegeGroupId = 9,
                            Description = "Itaque earum rerum hic tenetur a sapiente delectus ut aut.",
                            Name = "Vladimir Ignatov"
                        },
                        new
                        {
                            Id = 40,
                            CollegeGroupId = 9,
                            Description = "Nisi ut aliquid ex ea commodi consequatur quis autem vel.",
                            Name = "Alina Safonova"
                        },
                        new
                        {
                            Id = 41,
                            CollegeGroupId = 9,
                            Description = "Vel illum qui dolorem eum fugiat quo voluptas nulla pariatur.",
                            Name = "Stanislav Rodionov"
                        },
                        new
                        {
                            Id = 42,
                            CollegeGroupId = 9,
                            Description = "Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet consectetur.",
                            Name = "Anastasia Belaya"
                        },
                        new
                        {
                            Id = 43,
                            CollegeGroupId = 9,
                            Description = "Sit amet consectetur adipiscing elit sed do eiusmod tempor incididunt.",
                            Name = "Grigory Eliseev"
                        },
                        new
                        {
                            Id = 44,
                            CollegeGroupId = 9,
                            Description = "Cillum dolore eu fugiat nulla pariatur excepteur sint occaecat cupidatat non.",
                            Name = "Ekaterina Nikitina"
                        },
                        new
                        {
                            Id = 45,
                            CollegeGroupId = 9,
                            Description = "Ut enim ad minima veniam quis nostrum exercitationem ullam.",
                            Name = "Artur Kuzmin"
                        });
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Subjects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Lorem ipsum dolor sit amet consectetur.",
                            Name = "Mathematical Analysis"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ut enim ad minim veniam quis nostrud exercitation ullamco.",
                            Name = "Linear Algebra"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Duis aute irure dolor in reprehenderit in voluptate velit esse.",
                            Name = "Marine Navigation"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Excepteur sint occaecat cupidatat non proident sunt culpa.",
                            Name = "Ship Management"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Sed ut perspiciatis unde omnis iste natus error.",
                            Name = "International Logistics"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Lorem ipsum dolor sit amet adipiscing elit sed.",
                            Name = "Corporate Finance"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Ut labore et dolore magna aliqua enim ad.",
                            Name = "Discrete Mathematics"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Consectetur adipiscing elit sed do eiusmod tempor.",
                            Name = "Marketing Strategies"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Velit esse cillum dolore eu fugiat nulla pariatur.",
                            Name = "Business Ethics"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Nisi ut aliquip ex ea commodo consequat laboris.",
                            Name = "Computational Models"
                        });
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollegeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CollegeId");

                    b.ToTable("Teachers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollegeId = 1,
                            Name = "Dr. Marina Volkova",
                            Position = "Professor"
                        },
                        new
                        {
                            Id = 2,
                            CollegeId = 1,
                            Name = "Mr. Sergey Belov",
                            Position = "Lecturer"
                        },
                        new
                        {
                            Id = 3,
                            CollegeId = 1,
                            Name = "Ms. Yana Petrova",
                            Position = "Senior Lecturer"
                        },
                        new
                        {
                            Id = 4,
                            CollegeId = 1,
                            Name = "Mrs. Svetlana Orlova",
                            Position = "Associate Professor"
                        },
                        new
                        {
                            Id = 5,
                            CollegeId = 2,
                            Name = "Dr. Ivan Denisov",
                            Position = "Professor"
                        },
                        new
                        {
                            Id = 6,
                            CollegeId = 2,
                            Name = "Mr. Yuri Zverev",
                            Position = "Lecturer"
                        },
                        new
                        {
                            Id = 7,
                            CollegeId = 2,
                            Name = "Ms. Anastasia Rybakova",
                            Position = "Senior Lecturer"
                        },
                        new
                        {
                            Id = 8,
                            CollegeId = 2,
                            Name = "Mrs. Alina Golubeva",
                            Position = "Associate Professor"
                        },
                        new
                        {
                            Id = 9,
                            CollegeId = 2,
                            Name = "Mr. Viktor Lavrov",
                            Position = "Instructor"
                        },
                        new
                        {
                            Id = 10,
                            CollegeId = 3,
                            Name = "Dr. Elena Koroleva",
                            Position = "Professor"
                        },
                        new
                        {
                            Id = 11,
                            CollegeId = 3,
                            Name = "Mr. Artem Tarasov",
                            Position = "Lecturer"
                        },
                        new
                        {
                            Id = 12,
                            CollegeId = 3,
                            Name = "Ms. Irina Fedorova",
                            Position = "Senior Lecturer"
                        },
                        new
                        {
                            Id = 13,
                            CollegeId = 3,
                            Name = "Mrs. Galina Mikhailova",
                            Position = "Associate Professor"
                        },
                        new
                        {
                            Id = 14,
                            CollegeId = 3,
                            Name = "Mr. Nikolai Alekseev",
                            Position = "Instructor"
                        });
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.TeacherSubject", b =>
                {
                    b.Property<int>("TeacherId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SubjectId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.HasKey("TeacherId", "SubjectId");

                    b.HasIndex("SubjectId");

                    b.ToTable("TeacherSubjects");

                    b.HasData(
                        new
                        {
                            TeacherId = 1,
                            SubjectId = 1
                        },
                        new
                        {
                            TeacherId = 1,
                            SubjectId = 2
                        },
                        new
                        {
                            TeacherId = 2,
                            SubjectId = 2
                        },
                        new
                        {
                            TeacherId = 3,
                            SubjectId = 7
                        },
                        new
                        {
                            TeacherId = 4,
                            SubjectId = 10
                        },
                        new
                        {
                            TeacherId = 5,
                            SubjectId = 3
                        },
                        new
                        {
                            TeacherId = 6,
                            SubjectId = 4
                        },
                        new
                        {
                            TeacherId = 7,
                            SubjectId = 5
                        },
                        new
                        {
                            TeacherId = 8,
                            SubjectId = 5
                        },
                        new
                        {
                            TeacherId = 9,
                            SubjectId = 4
                        },
                        new
                        {
                            TeacherId = 10,
                            SubjectId = 6
                        },
                        new
                        {
                            TeacherId = 11,
                            SubjectId = 8
                        },
                        new
                        {
                            TeacherId = 12,
                            SubjectId = 8
                        },
                        new
                        {
                            TeacherId = 13,
                            SubjectId = 9
                        },
                        new
                        {
                            TeacherId = 14,
                            SubjectId = 9
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.CollegeGroup", b =>
                {
                    b.HasOne("StudentsGroupsCollege.Models.College", "College")
                        .WithMany("CollegeGroups")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Staff", b =>
                {
                    b.HasOne("StudentsGroupsCollege.Models.College", "College")
                        .WithMany("Staffs")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Student", b =>
                {
                    b.HasOne("StudentsGroupsCollege.Models.CollegeGroup", "CollegeGroup")
                        .WithMany("Students")
                        .HasForeignKey("CollegeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CollegeGroup");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Teacher", b =>
                {
                    b.HasOne("StudentsGroupsCollege.Models.College", "College")
                        .WithMany("Teachers")
                        .HasForeignKey("CollegeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("College");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.TeacherSubject", b =>
                {
                    b.HasOne("StudentsGroupsCollege.Models.Subject", "Subject")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StudentsGroupsCollege.Models.Teacher", "Teacher")
                        .WithMany("TeacherSubjects")
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.College", b =>
                {
                    b.Navigation("CollegeGroups");

                    b.Navigation("Staffs");

                    b.Navigation("Teachers");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.CollegeGroup", b =>
                {
                    b.Navigation("Students");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Subject", b =>
                {
                    b.Navigation("TeacherSubjects");
                });

            modelBuilder.Entity("StudentsGroupsCollege.Models.Teacher", b =>
                {
                    b.Navigation("TeacherSubjects");
                });
#pragma warning restore 612, 618
        }
    }
}
